GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
- зайти на github.com и авторизоваться
- нажать New 
- в окне Create a new repository заполнить Repository name
- нажать Create repository

 5. Клонировать репозиторий JSON на локальный компьютер.
- git clone https://github.com/MaryaStepanova/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
- cat > new.json

 7. Добавить файл под гит.
- git add new.json

 8. Закоммитить файл.
- git commit -m "new_file"

 9. Отправить файл на внешний GitHub репозиторий.
- git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- vim new.json
- нажать i, заполнить данные в формате JSON
- после заполнения нажать Esc и далее :wq

 11. Отправить изменения на внешний репозиторий.
- git add new.json
- git commit -m "new_info"
- git push

 12. Создать файл preferences.json
- cat > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
- vim preferences.json
- нажать i, заполнить данные в формате JSON
- после заполнения нажать Esc и далее :wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
- cat > skills.json
- vim skills.json
- нажать i, заполнить данные в формате JSON
- после заполнения нажать Esc и далее :wq

 15. Отправить сразу 2 файла на внешний репозиторий.
- git add . && git commit -m "Added preferences.json and skills.json" && git push

 16. На веб интерфейсе создать файл bug_report.json.
- нажать Add file - Create new file
- внести имя bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- нажать Commit changes

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
- открыть файл bug_report.json
- нажать кнопку карандаш (Edit this file)
- внести данные в формате JSON

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- нажать кнопку Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
- git pull

XML
 21. Создать внешний репозиторий c названием XML.
- зайти на github.com и авторизоваться
- нажать New 
- в окне Create a new repository заполнить Repository name
- нажать Create repository

 22. Клонировать репозиторий XML на локальный компьютер.
- git clone https://github.com/MaryaStepanova/XML.git

 23. Внутри локального XML создать файл “new.xml”.
- cat > new.xml

 24. Добавить файл под гит.
- git add new.xml

 25. Закоммитить файл.
- git commit -m "Add_new_file"

 26. Отправить файл на внешний GitHub репозиторий.
- git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
- vim new.xml
- нажать i, заполнить данные в формате XML
- после заполнения нажать Esc и далее :wq

 28. Отправить изменения на внешний репозиторий.
- git add new.xml
- git commit -m "New_info"
- git push

 29. Создать файл preferences.xml
- cat > preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
- vim preferences.xml
- нажать i, заполнить данные в формате XML
- после заполнения нажать Esc и далее :wq


 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
- cat > skills.xml
- vim skills.xml
- нажать i, заполнить данные в формате XML
- после заполнения нажать Esc и далее :wq

 32. Сделать коммит в одну строку.
- git add . && git commit -m "Added preferences.xml and skills.xml files"

 33. Отправить сразу 2 файла на внешний репозиторий.
- git push

 34. На веб интерфейсе создать файл bug_report.xml.
- нажать Add file - Create new file
- внести имя bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- нажать Commit changes

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
- открыть файл bug_report.xml
- нажать кнопку карандаш (Edit this file)
- внести данные в формате XML

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- - нажать кнопку Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
- git pull
